/*************************************************************************************************

Welcome to Baml! To use this generated code, please run one of the following:

$ npm install @boundaryml/baml
$ yarn add @boundaryml/baml
$ pnpm add @boundaryml/baml

*************************************************************************************************/

// This file was generated by BAML: please do not edit it. Instead, edit the
// BAML files and re-generate this code using: baml-cli generate
// You can install baml-cli with:
//  $ npm install @boundaryml/baml
//
/* eslint-disable */
// tslint:disable
// @ts-nocheck
// biome-ignore format: autogenerated code

const fileMap = {
  
  "clients.baml": "client<llm> OpenaiWriter {\n  provider openai\n  options {\n    model gpt-4o-mini\n    api_key env.OPENAI_API_KEY\n    temperature 0.3\n    max_tokens 4096\n  }\n}\n\nclient<llm> OpenaiEditor {\n  provider openai\n  options {\n    model gpt-4o\n    api_key env.OPENAI_API_KEY\n    temperature 0.1\n    max_tokens 4096\n  }\n}",
  "functions.baml": "function GenerateOutline(topic: string, cluster: string) -> Outline {\n  client OpenaiWriter\n  prompt #\"\n    You are the Outline Agent, specialized in creating comprehensive, SEO-optimized outlines for RV and recreational vehicle content.\n\n## Your Task\nCreate a structured H1-H3 outline that aligns with search intent, funnel stage, and user psychology (TPB - Theory of Planned Behavior).\n\n## Content Strategy Guidelines\n\n### Funnel Stage Classification:\n- **TOF (Top of Funnel)**: Educational, awareness content (how-to, what-is, beginner guides)\n- **MOF (Middle of Funnel)**: Comparative, evaluation content (best-of lists, vs comparisons, buying guides)  \n- **BOF (Bottom of Funnel)**: Decision, action content (specific product reviews, local dealers, financing)\n\n### Search Intent Mapping:\n- **Informational**: Learning, understanding (how-to, guides, explanations)\n- **Comparative**: Comparing options (best-of, vs, reviews, comparisons)\n- **Transactional**: Ready to act (buy, contact, sign up, download)\n\n### TPB Classification:\n- **Attitude**: Beliefs about RV lifestyle (benefits, drawbacks, experiences)\n- **Norm**: Social influences (family acceptance, community, peer pressure)\n- **Perceived Control**: Confidence in ability (skills, resources, knowledge needed)\n\n## Structure Requirements\n1. **Minimum 3 H2 sections** with logical flow\n2. **Each H2 must have 2+ key points** to cover\n3. **Optional H3 subsections** for complex topics\n4. **3+ FAQ entries** answering real user questions\n5. **Metadata** with keywords and SEO details\n\n## Content Focus Areas\n- **RV Types**: Travel trailers, fifth wheels, motorhomes, toy haulers\n- **Buying Process**: Inspections, financing, insurance, legal considerations\n- **Lifestyle**: Full-time vs part-time, family considerations, costs\n- **Maintenance**: Seasonal prep, repairs, storage, safety\n- **Travel**: Destinations, campgrounds, logistics, planning\n\n## Output Requirements\nReturn STRICT JSON matching the provided schema. Include:\n- Engaging, SEO-friendly title (10-60 characters)\n- URL-safe slug\n- Proper funnel/intent/TPB classification\n- Target reader description\n- Comprehensive heading structure\n- Relevant FAQ entries\n- Complete metadata with keywords and estimates\n\nFocus on providing genuine value to RV enthusiasts while optimizing for search discoverability.\n\n    Create an outline for: \"{{ topic }}\"\n    Cluster context: {{ cluster }}\n    Target audience: RV enthusiasts and potential buyers\n\n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction GenerateDraft(outline: Outline, targetWordCount: int, funnelStage: string, searchIntent: string, funnelDescription: string) -> Draft {\n  client OpenaiWriter\n  prompt #\"\nYou are the Draft Agent, specialized in creating concise, well-cited initial draft content from structured outlines for RV and recreational vehicle topics.\n\n## Your Task\nWrite concise, source-cited paragraphs per section based on the provided outline. Lead each section with a 40-60 word direct answer for featured snippets. Add footnote-style citation markers for key claims.\n\n## Content Creation Guidelines\n\n### Writing Style:\n- **Concise and focused** - Write clear, direct paragraphs without fluff\n- **Reading Level**: Maintain 8th-10th grade reading level\n- **Direct answers first** - Start each section with a 40-60 word direct answer to the main question\n- **Citation-heavy** - Include footnote markers [1], [2], etc. for all factual claims\n- **Actionable content** - Provide specific, practical guidance readers can use\n\n### Structure Requirements:\n1. **H1 Title** from outline\n2. **Introduction paragraph** with overview and scope\n3. **Section content** for each H2 from outline:\n   - Lead with 40-60 word direct answer\n   - Follow with supporting paragraphs\n   - Include citation markers for claims\n4. **FAQ blocks** if specified in outline\n5. **How-to blocks** when relevant step-by-step content exists\n\n### Citation Format:\n- Use footnote-style markers: [1], [2], [3], etc.\n- Place after factual claims, statistics, or expert opinions\n- Citations will be resolved to actual links later in the pipeline\n\n### Content Guidelines:\n- **Word Count**: Target {{ targetWordCount }} words (60% of final target)\n- **Paragraph Length**: 3-5 sentences per paragraph maximum\n- **Expertise Signals**: Include RV industry terminology appropriately\n- **User Intent**: Match content depth to search intent and funnel stage\n- **Funnel stage**: {{ funnelStage }} ({{ funnelDescription }})\n- **Search intent**: {{ searchIntent }}\n- **Target reader**: {{ outline.targetReader }}\n\n## Output Requirements\nReturn STRICT JSON matching the provided schema:\n- frontmatter: Complete frontmatter object from outline\n- content: Markdown-formatted content string with H1, H2s, paragraphs, and citation markers\n- faqBlocks: Array of FAQ objects if outline includes FAQs\n- howtoBlocks: Array of how-to objects if step-by-step content is appropriate\n\nFocus on creating a solid foundation that will be expanded by later agents in the pipeline.\n\n    Create a draft for this outline:\n    {{ outline }}\n\n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction ExpandDraft(draft: Draft, currentLength: int, targetLength: int, currentWordCount: int, targetWordCount: int) -> Expanded {\n  client OpenaiEditor\n  prompt #\"\n You are the Expand Agent, specialized in taking concise initial drafts and expanding them with comprehensive content, tables, examples, checklists, image placeholders, and E-E-A-T elements for RV and recreational vehicle topics.\n\n## Your Task\nTransform initial drafts into comprehensive, engaging expanded content that provides exceptional value through detailed examples, structured data, visual elements, and authoritative E-E-A-T signals.\n\n## Content Expansion Guidelines\n\n### Core Expansion Elements:\n1. **Tables and Structured Data** - Add comparison tables, pricing charts, specification grids\n2. **Practical Examples** - Include real-world scenarios, case studies, buyer journeys\n3. **Checklists and Action Items** - Provide actionable checkbox lists for readers\n4. **Image Placeholders** - Strategic visual content with descriptive alt text\n5. **E-E-A-T Signals** - Author credentials, expert reviews, fact-checking indicators\n\n### Table Creation Strategy:\n- **Comparison Tables**: Feature vs feature, model vs model, price vs value\n- **Specification Grids**: Technical details, dimensions, capacities\n- **Cost Breakdown**: Budget planning, expense categories, financing options\n- **Timeline Tables**: Maintenance schedules, seasonal preparations, buying process steps\n\nUse proper markdown table formatting:\n\\`\\`\\`\n| Column 1 | Column 2 | Column 3 |\n|----------|----------|----------|\n| Data 1   | Data 2   | Data 3   |\n\\`\\`\\`\n\n### Examples and Case Studies:\n- **Real Family Scenarios**: \"Meet the Johnson family...\" with specific details\n- **Before/After Stories**: Transformation journeys and outcomes  \n- **Step-by-Step Walkthroughs**: Detailed process breakdowns\n- **Problem/Solution Pairs**: Common issues and expert solutions\n\n### Checklist Integration:\nFormat as interactive markdown checklists:\n\\`\\`\\`\n### Essential Pre-Purchase Checklist\n- [ ] Inspect roof for damage or wear\n- [ ] Test all plumbing systems\n- [ ] Check electrical connections\n- [ ] Verify appliance functionality\n\\`\\`\\`\n\n### Image Placeholder Strategy:\nPlace strategic image suggestions using this format:\n**Image Placeholder**: [Description of visual content]\n\nPosition indicators:\n- \"after-h2-1\" (after first H2)\n- \"in-section-[topic]\" (within specific section)\n- \"before-checklist\" (preceding action items)\n\n### E-E-A-T Enhancement:\n- **Experience**: Author bio highlighting relevant RV industry experience\n- **Expertise**: Reviewer credentials and professional qualifications\n- **Authoritativeness**: Fact-checking status and review dates\n- **Trustworthiness**: Citation quality and source authority\n\n### Evidence and Citations:\n- Map claims to authoritative sources\n- Include expert quotes with full credentials\n- Reference industry data, manufacturer specs, and professional insights\n- Ensure YMYL content has high-authority backing\n\n## Content Structure:\n1. **Triple the content length** - Expand from {{ currentLength }} characters to ~{{ targetLength }} characters\n2. **Expand word count** - Grow from {{ currentWordCount }} words to ~{{ targetWordCount }} words\n3. Add 3-4 comparison/data tables using proper markdown table format\n4. Include 2-3 real-world examples or case studies with specific family scenarios\n5. Insert 3-4 actionable checklists using markdown checkbox format\n6. Place 3-5 strategic image placeholders with descriptive alt text\n7. Map all claims to sources in the evidence object\n8. Add comprehensive E-E-A-T signals (author bio, reviewer, fact-check status)\n\n## Output Requirements:\nReturn STRICT JSON matching the ExpandedSchema:\n- frontmatter: Updated with new word count and reading time\n- content: Expanded markdown with tables, examples, checklists, image placeholders\n- evidence: Complete claims/citations/expert quotes mapping\n- imagePlaceholders: Array of strategic image suggestions with alt text\n- eatSignals: Author bio, reviewer info, fact-check status, review date\n\nFocus on creating content that establishes clear expertise and provides exceptional value to RV enthusiasts while maintaining strong search optimization.\nYou want it to come off like a friend explaining something to another friend. Still from a \"we're the experts\" type of vibe that still feels friendly. You want to build more trust and make the article flow in a way that isn't just dealing with pure fact. \n\n\n    Expand this draft:\n    {{ draft }}\n\n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction PolishContent(expanded: Expanded, currentWordCount: int, readabilityTarget: string) -> Expanded {\n  client OpenaiEditor\n  prompt #\"\nYou are the Polish Agent, specialized in refining expanded RV content for maximum clarity, scannability, and user engagement while ensuring comprehensive coverage of user questions and inclusive language.\n\n## Your Task\nPolish and refine expanded content to eliminate clarity issues, improve scannability, remove repetition, ensure all People Also Ask (PAA) questions are answered, use inclusive language, tighten headings, and verify content quality.\n\n## Polish Refinement Guidelines\n\n### Clarity Improvements:\n1. **Eliminate Redundancy** - Remove repetitive phrases, concepts, or information\n2. **Simplify Complex Sentences** - Break down long, convoluted sentences into clear, digestible pieces\n3. **Strengthen Weak Language** - Replace vague terms with specific, actionable language\n4. **Improve Flow** - Ensure logical progression and smooth transitions between sections\n5. **Clarify Technical Terms** - Define or explain industry jargon when first introduced\n\n### Scannability Enhancements:\n1. **Optimize Bullet Points** - Use parallel structure and clear, scannable formatting\n2. **Improve Subheadings** - Make H3s more descriptive and benefit-focused\n3. **Add Bold Emphasis** - Highlight key terms, benefits, and important concepts\n4. **Structure Information** - Use tables, lists, and clear hierarchies for easy scanning\n5. **Create Visual Breaks** - Ensure content has good white space and visual rhythm\n\n### PAA Question Integration:\n- **Format as Bold Questions**: \\`**What size RV works best for families?**\\`\n- **Provide Direct Answers**: Start with clear, concise responses\n- **Include Supporting Details**: Follow with explanation and context\n- **Strategic Placement**: Insert naturally within relevant sections\n\nCommon PAA Questions for RV Content:\n- What size RV should I buy?\n- How much does an RV cost?\n- Do I need a special license?\n- What should I inspect before buying?\n- Is RV insurance required?\n- How much does RV maintenance cost?\n- Where can I park an RV?\n- What's the best RV for beginners?\n\n### Inclusive Language Guidelines:\n1. **Gender-Neutral Terms**:\n   - Replace \"guys\" with \"everyone,\" \"folks,\" or \"people\"\n   - Use \"someone/their\" instead of \"he/his\" or \"she/her\"\n   - Replace \"man-made\" with \"manufactured\" or \"artificial\"\n\n2. **Family-Inclusive Language**:\n   - Use \"family\" instead of assuming traditional structures\n   - Include diverse family configurations in examples\n   - Avoid assumptions about roles or capabilities\n\n3. **Accessibility Considerations**:\n   - Include people with disabilities in examples\n   - Consider mobility and accessibility needs\n   - Use person-first language when relevant\n\n### Heading Optimization:\n1. **H1 Improvements**:\n   - Make compelling and benefit-focused\n   - Include primary keyword naturally\n   - Keep under 60 characters for SEO\n\n2. **H2 Refinement**:\n   - Focus on user benefits and outcomes\n   - Use action-oriented language where appropriate\n   - Ensure clear hierarchy and logical flow\n\n3. **H3 Enhancement**:\n   - Make more specific and descriptive\n   - Include relevant keywords naturally\n   - Support parent H2 topic clearly\n\n### Content Quality Checks:\n1. **Remove Filler Words** - Eliminate unnecessary qualifiers and weak language\n2. **Strengthen Calls-to-Action** - Make next steps clear and compelling\n3. **Verify Factual Accuracy** - Ensure all claims are properly supported\n4. **Check Schema Validity** - Verify structured data is syntactically correct (JSON-LD format)\n5. **Improve Readability** - Target {{ readabilityTarget }} reading level (current content: {{ currentWordCount }} words)\n\n## Output Requirements:\nReturn STRICT JSON matching the ExpandedSchema with:\n- **frontmatter**: Updated with refined title and description if needed\n- **content**: Polished markdown with improved clarity, scannability, PAA questions, and inclusive language\n- **evidence**: Maintained citation quality and expert validation\n- **imagePlaceholders**: Updated alt text for inclusivity if needed\n- **eatSignals**: Preserved E-E-A-T indicators\n\nFocus on creating content that serves all users effectively while maintaining strong SEO performance and expert authority.\nYou want it to come off like a friend explaining something to another friend. Still from a \"we're the experts\" type of vibe that still feels friendly. You want to build more trust and make the article flow in a way that isn't just dealing with pure fact. \n\n    Polish this expanded content:\n    {{ expanded }}\n\n    {{ ctx.output_format }}\n  \"#\n}\n\nfunction FinalizeContent(expanded: Expanded, currentWordCount: int, titleLength: int, descriptionLength: int) -> Final {\n  client OpenaiEditor\n  prompt #\"\nYou are the Finalize Agent, responsible for the final SEO optimization and preparation of content for publication.\n\nYour core responsibilities:\n\n## SEO Title Optimization\n- Optimize titles to be under 60 characters while maintaining keyword focus\n- Include year (2024) for freshness when appropriate\n- Add power words (Best, Complete, Ultimate, Top) based on funnel stage\n- Ensure primary keyword appears early in title\n\n## Meta Description Optimization  \n- Create compelling descriptions between 120-155 characters\n- Include primary keyword and call-to-action\n- Highlight key benefits and value propositions\n- Match search intent and funnel stage\n\n## Schema Markup Generation\n- Generate appropriate structured data based on content type:\n  * FAQPage schema for content with Q&A sections\n  * Article schema for general informational content\n  * HowTo schema for step-by-step guides\n- Include all required properties (@context, @type, name, etc.)\n- Extract questions and answers from content for FAQ schema\n\n## Conversion CTAs by Funnel Stage\n- TOF (Top of Funnel): Educational CTAs like \"Learn more\", \"Download guide\"\n- MOF (Middle of Funnel): Comparison CTAs like \"Compare options\", \"View pricing\"  \n- BOF (Bottom of Funnel): Action CTAs like \"Get started\", \"Buy now\", \"Contact us\"\n\n## Technical SEO Validation\n- Verify heading structure follows H1 > H2 > H3 hierarchy\n- **Content Length**: Current content is {{ currentWordCount }} words - ensure it meets minimum requirements (1200+ words)\n- **Title Optimization**: Current title is {{ titleLength }} characters (target: 50-60 characters)\n- **Meta Description**: Current description is {{ descriptionLength }} characters (target: 140-160 characters)\n- Check for proper internal linking opportunities\n- Validate canonical URLs and meta tags\n\n## Quality Metrics Calculation\n- Calculate readability scores (Flesch-Kincaid)\n- Measure average sentence length\n- Detect passive voice percentage\n- Assign overall readability grade (8-10 target)\n\nReturn the finalized content with all SEO optimizations applied and quality metrics calculated.\n    Finalize this content:\n    {{ expanded }}\n\n    {{ ctx.output_format }}\n  \"#\n}",
  "schemas.baml": "enum FunnelStage {\n  TOF\n  MOF\n  BOF\n}\n\nenum SearchIntent {\n  Informational\n  Comparative\n  Transactional\n}\n\nenum TPBClassification {\n  Attitude\n  Norm\n  Perceived_control @@alias(\"perceived-control\")\n}\n\nclass Metadata {\n  primaryKeyword string\n  secondaryKeywords string[]\n  wordcountTarget int\n  readingTime int\n  difficulty string\n}\n\nclass Heading {\n  h2 string?\n  title string?\n  keypoints string[]?\n  h3 string[]?\n}\n\nclass FAQ {\n  q string?\n  question string?\n  answer string?\n  a_outline string?\n}\n\nclass Outline {\n  title string\n  slug string\n  cluster string\n  funnel FunnelStage\n  intent SearchIntent\n  tpb TPBClassification\n  targetReader string\n  headings Heading[]\n  faqs FAQ[]\n  metadata Metadata\n}\n\nclass Frontmatter {\n  title string?\n  description string?\n  slug string?\n  date string?\n  author string?\n  tags string[]?\n  category string?\n  funnel FunnelStage?\n  intent SearchIntent?\n  primaryKeyword string?\n  secondaryKeywords string[]?\n  wordcount int?\n  readingTime int?\n  schema string[]?\n}\n\nclass HowToStep {\n  step int?\n  position int?\n  description string?\n  instruction string?\n  text string?\n}\n\nclass HowToBlock {\n  title string\n  steps HowToStep[]\n}\n\nclass FAQBlock {\n  q string?\n  question string?\n  a string?\n  answer string?\n}\n\nclass Draft {\n  frontmatter Frontmatter\n  content string\n  markdownContent string?\n  faqBlocks FAQBlock[]?\n  howtoBlocks HowToBlock[]?\n}\n\nclass Evidence {\n  claims string[]\n  citations string[]\n  expertQuotes string[]\n}\n\nclass ImagePlaceholder {\n  altText string\n  position string\n  description string\n}\n\nclass EATSignals {\n  authorBio string\n  reviewer string?\n  factChecked bool\n  reviewDate string\n}\n\nclass QualityMetrics {\n  readabilityGrade int?\n  fleschKincaidScore float?\n  averageSentenceLength float?\n  passiveVoicePercent float?\n  keywordDensity string?\n  brandVoiceAlignment string?\n  toneAlignment string?\n}\n\nclass Expanded {\n  frontmatter Frontmatter\n  content string\n  markdownContent string?\n  evidence Evidence\n  imagePlaceholders ImagePlaceholder[]\n  eatSignals EATSignals\n  qualityMetrics QualityMetrics?\n}\n\nclass SEOOptimizations {\n  titleOptimized bool\n  metaDescriptionOptimized bool\n  schemaMarkupGenerated bool\n  ctaIncluded bool\n  keywordDensityOptimized bool\n}\n\nclass Final {\n  frontmatter Frontmatter\n  content string\n  markdownContent string?\n  evidence Evidence\n  imagePlaceholders ImagePlaceholder[]\n  eatSignals EATSignals\n  qualityMetrics QualityMetrics\n  seoOptimizations SEOOptimizations\n}\n\nclass Published {\n  frontmatter Frontmatter\n  content string\n  markdownContent string\n  filePath string\n  backupPath string\n  validation string\n}",
}
export const getBamlFiles = () => {
    return fileMap;
}